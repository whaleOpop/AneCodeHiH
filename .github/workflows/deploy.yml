name: Deploy Vue 3 + Vite App with Docker

on:
  push:
    branches:
      - frontend

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ghcr.io/whaleopop/anecode-frontend

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.IMAGE_NAME }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies and build
        run: |
          npm install
          npm run build

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ghcr.io/whaleopop/anecode-frontend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install sshpass
        run: sudo apt-get install -y sshpass

      - name: Add host to known_hosts
        run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Ensure deploy user exists and configure Docker access
        run: |
          sshpass -p "${{ secrets.SSH_PASSWORD }}" ssh -o StrictHostKeyChecking=no root@${{ secrets.SSH_HOST }} << 'EOF'
          if ! id -u deploy_user &>/dev/null; then
            useradd -m deploy_user
            echo "deploy_user:password" | chpasswd
            usermod -aG docker deploy_user
          fi
          EOF

      - name: Stop and delete existing Docker container
        run: |
          sshpass -p "${{ secrets.SSH_PASSWORD }}" ssh -o StrictHostKeyChecking=no root@${{ secrets.SSH_HOST }} << 'EOF'
          if docker ps -a --format '{{.Names}}' | grep -Eq '^anecode-frontend$'; then
            docker stop anecode-frontend && docker rm anecode-frontend
          fi
          EOF

      - name: Pull and deploy new Docker container
        run: |
          sshpass -p "${{ secrets.SSH_PASSWORD }}" ssh -o StrictHostKeyChecking=no root@${{ secrets.SSH_HOST }} << 'EOF'
          docker pull ${{ env.IMAGE_NAME }}:latest
          docker run -d --name anecode-frontend -p 80:80 ${{ env.IMAGE_NAME }}:latest
          EOF
